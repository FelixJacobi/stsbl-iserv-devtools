#!/bin/bash -e

export LC_ALL=C
export EDITOR=$(which dummy-editor)

ISNATIVE=1
ISWINST=1

while getopts "hnw" option
do
  case $option in
    (n) ISNATIVE=0;;
    (w) ISWINST=0;;
    (h) cat <<EOUSAGE ; exit 0;;
Usage: $(basename $0) [options]
Options
  -p     prevent updating of install file
  -n     build package with native version number
  -w     build winst package
  -h     show this help
EOUSAGE
  esac
done

ADDITIONALBINARYPACKAGES=$(pcregrep "^Package: (.*)$" debian/control | awk '{ print $2 }' | sed ':a;N;$!ba;s/\n/ /g')
VERSIONSTRING=$(pcregrep -M "^(.*) \((.*)\) (.*); urgency=(.*)$" debian/changelog | head -n 1)
PACKAGE=$(echo $VERSIONSTRING | awk '{ print $1 }')
VERSION=$(echo $VERSIONSTRING | awk '{ print $2 }' | sed 's/(//g' | sed 's/)//g')
UPSTREAMVERSION=${VERSION%-*}

REVISION="-"${VERSION#*-}
PLAINREVISION=${VERSION#*-}

if [ $ISNATIVE = 0 ]
then
  REVISION=
  PLAINREVISION=
fi

if [ -f "/debian/install" ]
then
  rm -f /debian/install
  git add .
  git commit -m "Removed legacy install file."
fi

# link deb file
if [ -e "../""$PACKAGE""_""$UPSTREAMVERSION""$REVISION""_all.deb" ] && [ -L "../""$PACKAGE""_""$UPSTREAMVERSION""$REVISION""_all.deb" ]
then
  rm -f ../"$PACKAGE"_"$UPSTREAMVERSION""$REVISION"_all.deb
elif [ -e "../""$PACKAGE""_""$UPSTREAMVERSION""$REVISION""_all.deb" ] && [ ! -L "../""$PACKAGE""_""$UPSTREAMVERSION""$REVISION""_all.deb" ]
then
  echo "Destination .deb exists and is not a symbolic link! Terminating!" >&2
  exit 1
fi

if [ ! -e "/root/$PACKAGE/$UPSTREAMVERSION/$PLAINREVISION" ]
then
  mkdir -pv /root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"
fi

# create destionations
if [ ! -e "/root/package-pool/""$PACKAGE""/""$UPSTREAMVERSION""/""$PLAINREVISION""/""$PACKAGE""_""$UPSTREAMVERSION""$REVISION""_all.deb" ]
then
  touch /root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"/"$PACKAGE"_"$UPSTREAMVERSION""$REVISION"_all.deb
fi

# link destinations
ln -sfv /root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"/"$PACKAGE"_"$UPSTREAMVERSION""$REVISION"_all.deb ../"$PACKAGE"_"$UPSTREAMVERSION""$REVISION"_all.deb

for i in $ADDITIONALBINARYPACKAGES
do
  if ! [ "$i" = "$PACKAGE" ]
  then
    # link deb file
    if [ -e "../""$i""_""$UPSTREAMVERSION""$REVISION""_all.deb" ] && [ -L "../""$i""_""$UPSTREAMVERSION""$REVISION""_all.deb" ]
    then
      rm -f ../"$i"_"$UPSTREAMVERSION""$REVISION"_all.deb
    elif [ -e "/root/""$i""_""$UPSTREAMVERSION""$REVISION""_all.deb" ] && [ ! -L "../$i""_""$UPSTREAMVERSION""$REVISION""_all.deb" ]
    then
      echo "Destination .deb exists and is not a symbolic link! Terminating!" >&2
      exit 1
    fi

    if [ ! -e "/root/package-pool/""$PACKAGE""/""$UPSTREAMVERSION""/""$PLAINREVISION""/""$i""_""$UPSTREAMVERSION""$REVISION""_all.deb" ]
    then
      touch /root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"/"$i"_"$UPSTREAMVERSION""$REVISION"_all.deb
    fi

    ln -sfv /root/package-pool/"$PACKAGE"/"$UPSTREAMVERSION"/"$PLAINREVISION"/"$i"_"$UPSTREAMVERSION""$REVISION"_all.deb ../"$i"_"$UPSTREAMVERSION""$REVISION"_all.deb
  fi
done

dpkg-buildpackage -b
lintian || true

# remove links
rm -f ../"$PACKAGE"_"$UPSTREAMVERSION""$REVISION"_all.deb

for i in $ADDITIONALBINARYPACKAGES
do
  rm -f ../"$i"_"$UPSTREAMVERSION""$REVISION"_all.deb
done
